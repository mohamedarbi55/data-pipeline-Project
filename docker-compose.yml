version: "3"

services:
  # Zookeeper pour Kafka
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    ports:
      - "2181:2181"
    networks:
      - my_network

  # Kafka pour les messages météo
  kafka:
    image: confluentinc/cp-kafka:7.4.0
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
    networks:
      - my_network

  # Spark Master
  spark-master:
    image: bitnami/spark:3
    environment:
      - SPARK_MODE=master
    ports:
      - "7077:7077"
      - "8085:8080" # Web UI
    networks:
      - my_network

  # Spark Worker
  spark-worker:
    image: bitnami/spark:3
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
    depends_on:
      - spark-master
    ports:
      - "8081:8081" # Web UI
    networks:
      - my_network

  # Cassandra pour stocker les données
  cassandra:
    image: cassandra:4.0
    ports:
      - "9042:9042" # CQL port
    networks:
      - my_network

  # Grafana pour le dashboarding
  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    networks:
      - my_network
    depends_on:
      - cassandra

  # Flask API pour interagir avec Cassandra
  flask-api:
    build: ./flask-api
    ports:
      - "5000:5000"
    networks:
      - my_network
    depends_on:
      - cassandra

networks:
  my_network:
    driver: bridge
